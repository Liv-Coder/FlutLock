# FlutLock Project Intelligence

## Project Patterns
- Python-based command-line tool for automating Flutter app signing
- Focus on security and ease of use for the signing process
- Cross-platform compatibility is essential (Windows, macOS, Linux)
- Starting with a simple approach and evolving to more complex features

## Naming Conventions
- Use clear, descriptive function and variable names
- Follow Python PEP 8 style guidelines
- Use snake_case for variables and functions
- Use CamelCase for classes

## Security Considerations
- Never hardcode credentials or sensitive information
- Use environment variables or secure input methods for passwords
- Validate all user inputs
- Handle keystores with appropriate file permissions

## Development Workflow
- Start with a minimal, functional approach
- Use modular functions that can be tested independently
- Document code thoroughly
- Consider cross-platform compatibility in all operations

## User Preferences
- Clear, informative command-line output
- Guided experience with helpful error messages
- Option for non-interactive mode in CI/CD environments
- Security and reliability are top priorities 